;==========================================================================
; MUSICLALF Ver.1.0〜1.2共通 プログラムソース
; ファイル名 : smon.asm
; 機能 : 演奏モニタ
; PROGRAMED BY YUZO KOSHIRO
;==========================================================================
; ヘッダ編集/ソース修正 : @mucom88
;==========================================================================
	
	
	ORG	0DE00H
	
MWRITE:		EQU	9000H
MWRIT2:		EQU	MWRITE+3
ERRT:		EQU	MWRIT2+3
ERRORSN:	EQU	ERRT+3
ERRORIF:	EQU	ERRORSN+3
ERRORNF:	EQU	ERRORIF+3
ERRORFN:	EQU	ERRORNF+3
ERRORVF:	EQU	ERRORFN+3
ERROROO:	EQU	ERRORVF+3
ERRORND:	EQU	ERROROO+3
ERRORRJ:	EQU	ERRORND+3
STTONE:		EQU	ERRORRJ+3
STLIZM:		EQU	STTONE+3
REDATA:		EQU	STLIZM+3
MULT:		EQU	REDATA+3
DIV:		EQU	MULT+3
HEXDEC:		EQU	DIV+3
HEXPRT:		EQU	HEXDEC+3
ROM:		EQU	HEXPRT+3
RAM:		EQU	ROM+3
FMCOMC:		EQU	RAM+3
T_RST:		EQU	FMCOMC+3
ERRORNE:	EQU	T_RST+3
ERRORDC:	EQU	ERRORNE+3
ERRORML:	EQU	ERRORDC+3
MCMP:		EQU	ERRORML+3
ERRORVO:	EQU	MCMP+3
	
FMDAT:		EQU	08B00H
OTOWK:	EQU	8B00H+60H+60H
PARAM:	EQU	OTOWK+32
	
; -- CLEAR FROM COMPI1	-->
	
T_CLK:	EQU	08C10H
UDFLG:	EQU	T_CLK+4*11
BEFMD:	EQU	UDFLG+1
PTMFG:	EQU	BEFMD+2
PTMDLY:	EQU	PTMFG+1
TONEADR:EQU	PTMDLY+2
SPACE:	EQU	TONEADR+2	;2*6BYTE ｱｷ ｶﾞ ｱﾙ
DEFVOICE:EQU	SPACE+2*6
DEFVSSG:EQU	DEFVOICE+32
JCLOCK:	EQU	DEFVSSG+32
JPLINE:	EQU	JCLOCK+2
	
;-<
	
MSTART:	EQU	0B000H
MSTOP:	EQU	MSTART+3
MUSIC:	EQU	MSTART+3*6
DRIVE:	EQU	MUSIC+3*5
WKGET:	EQU	MUSIC+3*8
	
MUC88:	EQU	09600H
	
	
CLS1:	EQU	5F0EH
SCEDIT:	EQU	5F92H	;ｽｸﾘｰﾝ ｴﾃﾞｨｯﾄ
STOPKC:	EQU	35C2H	;ｽﾄｯﾌﾟｷｰ ﾁｪｯｸ
BUFCLR:	EQU	35D9H	;ｷｰﾊﾞｯﾌｧｸﾘｱ
	
DSPMSG:	EQU	0AB00H
KEYCHK:	EQU	DSPMSG+3*5
	
	
	JP	PRNWK
	JP	PRNWKI
	JP	CONVERT
	JP	CONVERT2
	JP	GETPARA
	JP	OPEX
	
PRNWK:
	LD	B,11
	LD	A,'A'
	LD	(CHCHR),A
	LD	A,1
	LD	(CHNUM),A
	LD	HL,0104H
	LD	(XY),HL
PRNWK2:
	PUSH	BC
	
	LD	HL,(XY)
	CALL	429DH
	EX	DE,HL
	LD	HL,CHCHR
	LDI
	DEC	HL
	INC	(HL)
	
	LD	A,(CHNUM)
	LD	B,A
	CALL	WKGET
	
	LD	A,3
	CALL	LOC
	BIT	3,(IX+31)
	CALL	ONOFF
	LD	C,(IX+6)
	LD	A,(CHNUM)
	CP	7
	JR	Z,PRNW4
	CP	11
	JR	Z,PRNW4
	SUB	4
	CP	3
	JR	C,PRNW3
	LD	A,C
	SUB	4
	LD	C,A
	JR	PRNW4
PRNW3:
	LD	A,C
	AND	00001111B
	LD	C,A
PRNW4:
	LD	A,7
	CALL	LOC
	EX	DE,HL
	LD	L,C
	CALL	PRNSUB
	
	LD	A,36
	CALL	LOC
	EX	DE,HL
	LD	L,(IX+18)
	CALL	PRNSUB
	
	LD	A,11
	CALL	LOC
	EX	DE,HL
	LD	L,(IX+9)
	LD	H,(IX+10)
	CALL	PRNS1
	
	LD	A,17
	CALL	LOC
	EX	DE,HL
	LD	L,(IX+2)
	LD	H,(IX+3)
	CALL	PRNS2
	
	LD	A,(IX+32)
	PUSH	AF
	AND	0F0H
	RRCA
	RRCA
	RRCA
	RRCA
	INC	A
	ADD	A,30H
	PUSH	AF
	LD	A,22
	CALL	LOC
	CALL	429DH
	POP	AF
	LD	(HL),A
	POP	AF
	AND	0FH
	LD	HL,KEYD
	ADD	A,A
	LD	D,0
	LD	E,A
	ADD	HL,DE
	PUSH	HL
	LD	A,23
	CALL	LOC
	CALL	429DH
	EX	DE,HL
	POP	HL
	LDI
	LDI
	
	LD	A,26
	CALL	LOC
	BIT	7,(IX+31)
	CALL	ONOFF
	LD	A,30
	CALL	LOC
	BIT	5,(IX+33)
	CALL	ONOFF
	
	LD	B,1
	CALL	WKGET
	PUSH	IX
	POP	HL
	LD	DE,8
	AND	A
	SBC	HL,DE	;L/R DATA AREA
	LD	A,(CHNUM)
	DEC	A
	CP	3
	JR	C,PRNW5
	SUB	3
	CP	4
	JR	C,PRNW6
	SUB	4
	ADD	A,4
PRNW5:
	LD	E,A
	LD	D,0
	ADD	HL,DE
	LD	A,(CHNUM)
	CP	11
	JR	NZ,PRNW50
	LD	A,(HL)
	RRCA
	RRCA
	JR	PRNW51
PRNW50:
	LD	A,(HL)
PRNW51:
	AND	11000000B
	JR	Z,PRNW6
	CP	0C0H
	JR	Z,PRNW6
	BIT	7,A
	JR	NZ,PRNW52
	LD	A,'R'
	JR	PRNW7
PRNW52:
	LD	A,'L'
	JR	PRNW7
PRNW6:
	LD	A,'C'
PRNW7:
	PUSH	AF
	LD	A,34
	CALL	LOC
	CALL	429DH
	POP	AF
	LD	(HL),A
	
	
; --	MUTE CHECK	--
	
	LD	BC,0
	LD	HL,BEFK
	CALL	KEYCHK
	JR	NZ,PRNW71
	LD	BC,0F801H
	LD	HL,BEFK+1
	CALL	KEYCHK
	JR	Z,PRNW9
	LD	C,9
	JR	PRNW72
PRNW71:
	LD	C,1
PRNW72:
	LD	B,8
PRNW73:
	RRCA
	JR	NC,PRNW74
	INC	C
	DJNZ	PRNW73
	JR	PRNW9
PRNW74:
	LD	B,C
	CALL	WKGET
	
	BIT	3,(IX+31)
	JR	NZ,PRNW8
	SET	3,(IX+31)
	JR	PRNW9
PRNW8:
	RES	3,(IX+31)
PRNW9:
	LD	DE,(XY)
	INC	E
	LD	(XY),DE
	LD	A,(CHNUM)
	INC	A
	LD	(CHNUM),A
	POP	BC
	DEC	B
	JP	NZ,PRNWK2
	
; --	RETKEY CHCEK	--
	
	LD	HL,RETK
	
	LD	BC,7F01H
	CALL	KEYCHK
	JR	Z,PRNWA
	BIT	7,A
	JR	NZ,PRNWA
	DI
	CALL	DRIVE
	EI
	
; --	F5 CHECK	--
	
PRNWA:
	LD	HL,F5K
	LD	BC,0DF09H
	CALL	KEYCHK
	JR	Z,PRNWB
	BIT	5,A
	JR	NZ,PRNWB
	XOR	A
	CALL	MSTART
PRNWB:
	CALL	FMPUT
	
; --	ｵﾝｼｮｸﾅﾝﾊﾞｰ ﾋｮｳｼﾞ	--
	
	LD	A,1
	LD	B,6
	LD	DE,6*256+17
OPUT0:
	PUSH	BC
	PUSH	AF
	CP	4
	JR	NZ,OPUT1
	POP	AF
	ADD	A,4
	PUSH	AF
OPUT1:
	LD	B,A
	CALL	WKGET
	LD	C,(IX+1)
	;DEC	C
	LD	B,0
	LD	HL,DEFVOICE
	ADD	HL,BC
	LD	L,(HL)
	DEC	L
	PUSH	DE
	CALL	PRNSUB
	POP	DE
	LD	A,D
	ADD	A,13
	LD	D,A
	POP	AF
	INC	A
	POP	BC
	DJNZ	OPUT0
	RET
	
PRNSUB:	;IN:DE<=X,Y:HL<=DATA (10ｼﾝ)
	LD	H,0
	CALL	HEXDEC
	INC	HL
	INC	HL
	EX	DE,HL
	PUSH	DE
	CALL	429DH
	EX	DE,HL
	POP	HL
	LDI
	LDI
	LDI
	RET
PRNS1:
	CALL	HEXDEC
	EX	DE,HL
	PUSH	DE
	CALL	429DH
	EX	DE,HL
	POP	HL
	LDI
	LDI
	LDI
	LDI
	LDI
	RET
PRNS2:			;(16ｼﾝ)
	CALL	HEXPRT
	EX	DE,HL
	PUSH	DE
	CALL	429DH
	EX	DE,HL
	POP	HL
	LDI
	LDI
	LDI
	LDI
	RET
PRNS3:
	LD	H,0
	CALL	HEXPRT
	EX	DE,HL
	PUSH	DE
	CALL	429DH
	EX	DE,HL
	POP	HL
	INC	HL
	INC	HL
	LDI
	LDI
	RET
ONOFF:
	JR	NZ,ONO2
	CALL	429DH
	EX	DE,HL
	LD	HL,OFFD
	LDI
	LDI
	LDI
	RET
ONO2:
	CALL	429DH
	EX	DE,HL
	LD	HL,OND
	LDI
	LDI
	LDI
	RET
PRNWKI:
	LD	HL,NAME
	CALL	DSPMSG
	
	LD	HL,NAME2
	LD	DE,0F3C8H+120*17
	LD	B,8
FPL1:
	PUSH	BC
	LDI
	LDI
	LD	A,120-2
	ADD	A,E
	LD	E,A
	ADC	A,D
	SUB	E
	LD	D,A
	POP	BC
	DJNZ	FPL1
	
	LD	DE,0F3C8H+120*17+4
	LD	B,6
FPL2:
	PUSH	BC
	LD	HL,NAME3
	LD	BC,10
	LDIR
	INC	DE
	INC	DE
	INC	DE
	POP	BC
	DJNZ	FPL2
	
	LD	HL,NAME4
	LD	DE,0F3C8H+120*16+3
	LD	BC,6*256+0FFH
FPL3:
	LDI
	LD	A,':'
	LD	(DE),A
	LD	A,12
	ADD	A,E
	LD	E,A
	ADC	A,D
	SUB	E
	LD	D,A
	DJNZ	FPL3
	
	RET
LOC:	;IN:A<=X ADR/OUT:HL
	LD	HL,(XY)
	ADD	A,H
	LD	H,A
	RET
	
; --	FMｵﾝｹﾞﾝﾉ ﾃﾞｰﾀ ｦ ﾋｮｳｼﾞ	--
	
FMPUT:
	LD	HL,FMDAT
	LD	DE,4*256+19	;XY
	CALL	FMP
	LD	HL,FMDAT+1
	LD	DE,17*256+19
	CALL	FMP
	LD	HL,FMDAT+2
	LD	DE,30*256+19
	CALL	FMP
	LD	HL,FMDAT+60H
	LD	DE,43*256+19
	CALL	FMP
	LD	HL,FMDAT+61H
	LD	DE,56*256+19
	CALL	FMP
	LD	HL,FMDAT+62H
	LD	DE,69*256+19
	CALL	FMP
	RET
FMP:
	LD	B,6
FMP2:
	PUSH	BC
	LD	B,4
FMP3:
	PUSH	BC
	PUSH	HL
	PUSH	DE
	LD	A,(HL)
	LD	L,A
	CALL	PRNS3
	POP	DE
	POP	HL
	INC	HL
	INC	HL
	INC	HL
	INC	HL
	INC	D
	INC	D
	INC	D
	POP	BC
	DJNZ	FMP3
	
	LD	A,D
	SUB	12
	LD	D,A
	INC	E
	POP	BC
	DJNZ	FMP2
	
	LD	A,32
	ADD	A,L
	LD	L,A
	ADC	A,H
	SUB	L
	LD	H,A
	LD	A,(HL)
	LD	L,A
	CALL	PRNS3
	RET
	
; ***   40 BYTE => 25 BYTE   ***
	
CONVERT:
	;IN:HL<=VOICEADR(40BYTE)
	;OUT:6000Hﾖﾘ 26BYTE
	
	LD	DE,PARAM
	LD	B,4
CV1:
	PUSH	BC
	PUSH	DE
	LD	B,9
CV2:
	LD	A,(HL)
	INC	HL
	LD	(DE),A
	LD	A,4
	ADD	A,E
	LD	E,A
	ADC	A,D
	SUB	E
	LD	D,A
	DJNZ	CV2
	
	POP	DE
	INC	DE
	POP	BC
	DJNZ	CV1
	
	LD	A,(HL)
	LD	(PARAM+36),A
	INC	HL
	LD	A,(HL)
	LD	(PARAM+38),A
	
	CALL	GETPARA
	
	LD	HL,OTOWK
	LD	DE,6000H
	LD	BC,32
	LDIR
	LD	HL,6001H
	RET
	
GETPARA:
	CALL	OPEX
	LD	IX,PARAM
	LD	IY,OTOWK+1
	LD	B,4
GETP2:
	PUSH	BC
	LD	L,(IX+32)
	LD	H,0
	LD	E,16
	PUSH	IX
	CALL	MULT
	POP	IX
	LD	A,L
	LD	L,(IX+28)
	ADD	A,L		; MUL/DT
	LD	(IY),A
	
	INC	IX
	INC	IY
	POP	BC
	DJNZ	GETP2
	
	LD	HL,PARAM+20
	LD	DE,OTOWK+5
	LD	BC,4
	LDIR                    ; TL
	
	LD	IX,PARAM
	LD	IY,OTOWK+9
	LD	B,4
GETP3:
	PUSH	BC
	LD	L,(IX+24)
	LD	H,0
	LD	E,64
	PUSH	IX
	CALL	MULT
	POP	IX
	LD	A,L
	LD	L,(IX)
	ADD	A,L		; KS/AR
	LD	(IY),A
	INC	IX
	INC	IY
	POP	BC
	DJNZ	GETP3
	
	LD	HL,PARAM+4
	LD	DE,OTOWK+13
	LD	BC,8
	LDIR                    ; DR&SR
	
	LD	IX,PARAM
	LD	IY,OTOWK+21
	LD	B,4
GETP4:
	PUSH	BC
	LD	L,(IX+16)
	LD	H,0
	LD	E,16
	PUSH	IX
	CALL	MULT
	POP	IX
	LD	A,L
	LD	L,(IX+12)
	ADD	A,L		; SL/RR
	LD	(IY),A
	
	INC	IX
	INC	IY
	POP	BC
	DJNZ	GETP4
	
	
	LD	A,(PARAM+36)
	LD	L,A
	LD	H,0
	LD	E,8
	PUSH	IX
	CALL	MULT
	POP	IX
	LD	A,(PARAM+37)
	ADD	A,L
	LD	(OTOWK+25),A
	
	CALL	OPEX
	
	RET
	
OPEX:
	LD	B,10
	LD	HL,PARAM+1    	; EX OP2,OP3
OPI4:
	LD	A,(HL)
	INC	HL
	LD	C,(HL)
	LD	(HL),A
	DEC	HL
	LD	(HL),C
	LD	DE,4
	ADD	HL,DE
	DJNZ 	OPI4
	RET
	
; ***   ｵﾝｼｮｸﾃﾞｰﾀ ﾍﾝｶﾝ ( 25 BYTE => 40 BYTE )    ***
	
	;IN:HL<=ﾍｯﾀﾞｦﾌｸﾑ ｵﾝｼｮｸﾃﾞｰﾀｱﾄﾞﾚｽ
	
CONVERT2:
	
	LD	IX,PARAM+28
	LD	B,4
	
; ---   SET DT&ML   ---
	
OPI0:
	PUSH	BC
	INC	HL   		; ｻｲｼｮ ﾀﾞｹ SKIP
	LD      A,(HL)
	
	PUSH	HL
	LD	L,A
	LD	H,0
	LD	DE,16
	PUSH	IX
	CALL	DIV
	POP	IX
	
	LD	(IX),E		; E=MULTIPLE
	LD	(IX+4),L 	; L=DETUNE
	POP	HL
	
	INC	IX
	POP	BC
	DJNZ	OPI0
	
; ---   SET TL   ---
	
	INC	HL
	LD	DE,PARAM+20
	LD	BC,4
	LDIR
	
; ---   SET KS&AR   ---
	
	LD	IX,PARAM
	LD	B,4
OPI1:
	PUSH	BC
	LD      A,(HL)
	INC	HL
	
	PUSH	HL
	LD	L,A
	LD	H,0
	LD	DE,64
	PUSH	IX
	CALL	DIV
	POP	IX
	
	LD	(IX),E		; E=ATTACK
	LD	(IX+24),L 	; L=KEY SCALE
	POP	HL
	
	INC	IX
	POP	BC
	DJNZ	OPI1
	
; ---   SET DR&SR   ---
	
	LD	DE,PARAM+4
	LD	BC,8
	LDIR
	
; ---   SET SL&RR   ---
	
	LD	IX,PARAM+12
	LD	B,4
OPI3:
	PUSH	BC
	LD      A,(HL)
	INC	HL
	
	PUSH	HL
	LD	L,A
	LD	H,0
	LD	DE,16
	PUSH	IX
	CALL	DIV
	POP	IX
	
	LD	(IX),E		; E=RR
	LD	(IX+4),L 	; L=SL
	POP	HL
	
	INC	IX
	POP	BC
	DJNZ	OPI3
	
; ---   SET AR & FB   ---
	
	LD	L,(HL)
	LD	H,0
	LD	DE,8
	PUSH	IX
	CALL	DIV
	POP	IX
	
	LD	A,L		; L=AL
	LD	(PARAM+36),A
	LD	A,E		; E=FB
	LD	(PARAM+37),A
	LD	HL,0
	LD	(PARAM+38),HL
	
	CALL	OPEX
	RET
	
NAME:	DB	'   Mut Vol Det   Adr  Key LFO Rev p qtz',0
NAME2:
	DB	'op'
	DB	'DM'
	DB	'TL'
	DB	'KA'
	DB	'DR'
	DB	'SR'
	DB	'SL'
	DB	'FC'
NAME3:
	DB	'1  3  2  4'
NAME4:	DB	'ABCHIJ'
CHNUM:	DB	0
XY:	DW	0
CHCHR:	DB	'A'
KEYD:	DB	'C ','C+','D ','D+','E ','F ','F+','G ','G+','A ','A+','B '
OND:	DB	'ON '
OFFD	DB	'OFF'
BEFK:	DB	0,0
RETK:	DB	0
F5K:	DB	0
